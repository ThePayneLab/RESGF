% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/search.r
\name{searchESGF}
\alias{searchESGF}
\alias{resgf_search}
\alias{resgf_search_datasets}
\alias{resgf_search_files}
\title{Search ESGF}
\usage{
resgf_search(
  ...,
  index.node = resgf_get_indexNode(),
  search.limit = 10000,
  show.all.replicas = FALSE,
  show.all.versions = FALSE,
  search.local.node.only = FALSE,
  simplify = TRUE
)

resgf_search_datasets(...)

resgf_search_files(...)
}
\arguments{
\item{...}{A list of constraints on which to apply the search.}

\item{index.node}{URL (including "http://") of the ESGF index node to search.  Defaults to global default
retrieved by `resgf_get_indexNode()`.}

\item{search.limit}{Maximum number of values to return in the search. ESGF currently limits this to 10000}

\item{show.all.replicas}{Show all copies (replicas) of a file or dataset (TRUE) or just the "original". Defaults to FALSE}

\item{show.all.versions}{Should the result showsall versions of a file or dataset? Defaults to FALSE}

\item{search.local.node.only}{Should just the local index node be searched (TRUE) or a distributed search across 
the entire ESGF be used (FALSE). Defaults to FALSE.}

\item{simplify}{Should the search function attempt to simplify the results or simply leave them as is?}
}
\value{
resegf_search_datasets() returns an resgfDataset object detailing the search results. resgf_search()
returns an resgfSearchResult object.
}
\description{
Functions to search ESGF.
}
\details{
For documentation of the constraints, see the ESGF RESTful API documentation for help, https://esgf.github.io/esg-search/ESGF_Search_RESTful_API.html. Details about the metadata returned can be found in the metadata setctions of https://esgf.github.io/esg-search/index.html.

resgf_search_datasets() looks specifically for datasets, while resgf_search() is a general interface to the
ESGF search functionality (and can work with aggregations and files as well).
}
\examples{
resgf_search_datasets(variable_id=c("tos","so"),
                      experiment_id="historical",
                      table_id="Omon",
                      project="CMIP6")
}
